---
name: add_ipv4_rule_acl
pack: network_essentials
runner_type: python-script
description: Add a Layer 3 IPv4 ACL rule to an already existing ACL.
enabled: true
entry_point: add_ipv4_rule_acl.py
parameters:
  mgmt_ip:
    type: string
    description: The management IP address of the target device.
    required: true
    position: 0
  username:
    type: string
    description: The login user name to connect to the device.
    position: 1
  password:
    type: string
    description: The login password to connect to the device.
    secret: true
    position: 2
  acl_name:
    type: string
    description: The name of the access control list
    required: true
    position: 3
  seq_id: &seq_id
    type: integer
    description: The sequence number of the rule, if not specified, the rule is added
      at the end of the list. Valid range is 0 to 4294967290
    position: 4
  action: &action
    type: string
    description: The action performed by the ACL rule.
    position: 5
    enum:
      - permit
      - deny
      - hard-drop
    default: permit
  protocol_type: &protocol_type
    type: string
    description: The type of IP packets to be filtered based on the protocol. Valid values
      are <0-255> or key words tcp, udp, icmp or ip.
      This parameter is required for extended ACL.
      For MLX - Valid values are <0-255> or supported protocol keywords.
    position: 6
  source: &source
    type: string
    description: The source IP address filters { any | S_IPaddress/mask(0.0.0.255) |
        S_IPaddress/Prefix | host,S_IPaddress } [ source-operator [ S_port-numbers ] ]
    required: true
    position: 7
    default: any
  destination: &destination
    type: string
    description: The destination IP address filters { any | S_IPaddress/mask(0.0.0.255) |
      S_IPaddress/Prefix | host,S_IPaddress } [ source-operator [ S_port-numbers ] ]
    position: 8
  dscp: &dscp
    type: string
    description: This matches the specified value against the DSCP value of the packet
      to filter.  Allowed values are 0 through 63.
        For SLX - DSCP value between 0 and 63. Format {<dscp>[,<dscp-force>]}.
        For NOS - DSCP value between 0 and 63. Format {<dscp>}.
        For MLX - this field will be used for dscp-mapping.
    required: false
    position: 9
  drop_precedence_force: &drop_precedence_force
    type: string
    description: This matches the drop_precedence value of the packet.
       Allowed values are 0 through 2.
       For MLX - Allowed values are 0 through 3.  Only supported by MLX, SLX 9850 and 9540 devices.
    position: 10
  urg: &urg
    type: string
    description: This enables the urg for the rule. Use "True" or "False" to enable or
        disable respectively.  Only supported by SLX and NOS devices.
    position: 11
  ack: &ack
    type: string
    description: This enables the ack for the rule. Use "True" or "False" to enable or
        disable respectively.  Only supported by SLX and NOS devices.
    position: 12
  push: &push
    type: string
    description: This enables the push for the rule. Use "True" or "False" to enable or
        disable respectively.  Only supported by SLX and NOS devices.
    position: 13
  fin: &fin
    type: string
    description: This enables the fin for the rule. Use "True" or "False" to enable or
        disable respectively.  Only supported by SLX and NOS devices.
    position: 14
  rst: &rst
    type: string
    description: This enables the rst for the rule. Use "True" or "False" to enable or
        disable respectively.  Only supported by SLX and NOS devices.
    position: 15
  sync: &sync
    type: string
    description: This enables the sync for the rule. Use "True" or "False" to enable or
        disable respectively.  Only supported by SLX and NOS devices.
    position: 16
  vlan_id: &vlan_id
    type: integer
    description: The VLAN interface to which the ACL is bound.
    position: 17
  count: &count
    type: string
    description: This enables the statistics for the rule. Use "True" or "False" to
        enable or disable respectively. Only supported by SLX and NOS devices.
    position: 18
  log: &log
    type: string
    description: This enables the logging for the rule. Use "True" or "False" to
        enable or disable respectively.
    position: 19
  mirror: &mirror
    type: string
    description: This enables the mirror for the rule. Use "True" or "False" to enable
        or disable respectively. Only supported by MLX, SLX 9850 and 9540 devices.
    position: 20
  copy_sflow: &copy_sflow
    type: string
    description: This enables the copy-sflow for the rule. Use "True" or "False" to
        enable or disable respectively. Only supported by MLX, SLX 9850 and 9540 devices.
    position: 21
  dscp_marking: &dscp_marking
    type: string
    description: This is the dscp-marking number that is used to mark the DSCP value in the
        incoming packet with the value you specify to filter.
        Allowed values are 0 through 63. Only supprted by MLX devices.
    required: false
    position: 22
  fragment: &fragment
    type: string
    description: The fragment keyword used to allow the ACL to filter fragmented packets. Only supprted by MLX devices.
        Use the non-fragment keyword to filter non-fragmented packets.
            - fragment
            - non-fragment
    required: false
    position: 23
  precedence: &precedence
    type: string
    description: This will match packets with given precedence value. Only supprted by MLX devices.
        Allowed value { <0 to 7> | critical | flash |
        flash-override | immediate | internet | network |
        priority | routine  }
    required: false
    position: 24
  option: &option
    type: string
    description: This will match IP option packets. Only supprted by MLX devices.
        supported values are - 
            any, eol, extended-security, ignore, loose-source-route,
            no-op, record-route, router-alert, security, streamid,
            strict-source-route, timestamp             
            Allowed value in decimal <0-255>.
    required: false
    position: 25
  suppress_rpf_drop: &suppress_rpf_drop
    type: boolean
    description: This will permit packets that fail RPF check. Use true or false to
        enable or disable respectively. Only supported by MLX devices.
    required: false
    position: 26
  priority: &priority
    type: integer
    description: This will set priority. Allowed value is <0-7>. Only supprted by MLX devices.
    required: false
    position: 27
  priority_force: &priority_force
    type: integer
    description: This will force packet outgoing priority. Allowed value is <0-7>. Only supported by MLX devices.
    required: false
    position: 28
  priority_mapping: &priority_mapping
    type: integer
    description: This will map incoming packet priority. Allowed value is <0-7>. Only supported by MLX devices.
    required: false
    position: 29
  tos: &tos
    type: string
    description: This will match packets with given TOS value. Only supprted by MLX devices.
        Allowed values are { <0-15> | 'max-reliability' | 'max-throughput' |
                             'min-delay' | 'normal' }
    required: false
    position: 30
  tcp_operator: &tcp_operator
    type: string
    description: This specify a comparison operator for the TCP port.
        This parameter applies only when you specify tcp as the protocol.
        Allowed values are ["established", "syn", "established syn"].
        Only supprted by MLX devices.
    position: 31
  icmp_filter: &icmp_filter
    type: string
    description: This is the ICMP message type to be filtered. Only supprted by MLX devices.
    enum:
        - administratively-prohibited
        - any-icmp-type
        - destination-host-prohibited
        - destination-host-unknown
        - destination-net-prohibited
        - destination-network-unknown
        - echo
        - echo-reply
        - general-parameter-problem
        - host-precedence-violation
        - host-redirect
        - host-tos-redirect
        - host-tos-unreachable
        - host-unreachable
        - information-reply
        - information-request
        - mask-reply
        - mask-request
        - net-redirect
        - net-tos-redirect
        - net-tos-unreachable
        - net-unreachable
        - packet-too-big
        - parameter-problem
        - port-unreachable
        - precedence-cutoff
        - protocol-unreachable
        - reassembly-timeout
        - redirect
        - router-advertisement
        - router-solicitation
        - source-host-isolated
        - source-quench
        - source-route-failed
        - time-exceeded
        - timestamp-reply
        - timestamp-request
        - ttl-exceeded
        - unreachable
    position: 32
  drop_precedence: &drop_precedence
    type: string
    description: This matches the drop_precedence value of the packet.
       Allowed values are 0 through 2.
       Only supported by MLX devices - Allowed values are 0 through 3.
    position: 33
  acl_rules:
    type: array
    description: This bulk operation is supported to create more than one ACL rule
        in one action execution. The parameters are passed to create multiple
        rules that will follow the constraints similar to a single rule creation.
        NOTE- If rules are specified in acl_rules, the rule specified outside
        of the array will be ignored and only the rules in the acl_array will be processed.
        NOTE- On MLX platform, maximum 64 rules can be configured using this
              parameter. User need to execute this action more than once to
              configure more than 64 rules.
    position: 34
    items:
      properties:
        seq_id:
          << : *seq_id
        action:
          << : *action
        protocol_type:
          << : *protocol_type
        source:
          << : *source
        destination:
          << : *destination
        dscp:
          << : *dscp
        drop_precedence_force:
          << : *drop_precedence_force
        urg:
          << : *urg
        ack:
          << : *ack
        push:
          << : *push
        fin:
          << : *fin
        rst:
          << : *rst
        sync:
          << : *sync
        vlan_id:
          << : *vlan_id
        count:
          << : *count
        log:
          << : *log
        mirror:
          << : *mirror
        copy_sflow:
          << : *copy_sflow
        dscp_marking:
          << : *dscp_marking
        fragment:
          << : *fragment
        precedence:
          << : *precedence
        option:
          << : *option
        suppress_rpf_drop:
          << : *suppress_rpf_drop
        priority:
          << : *priority
        priority_force:
          << : *priority_force
        priority_mapping:
          << : *priority_mapping
        tos:
          << : *tos
        tcp_operator:
          << : *tcp_operator
        icmp_filter:
          << : *icmp_filter
        drop_precedence:
          << : *drop_precedence
