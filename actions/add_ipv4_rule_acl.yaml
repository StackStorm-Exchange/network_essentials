---
name: add_ipv4_rule_acl
pack: network_essentials
runner_type: python-script
description: Add a Layer 3 IPv4 ACL rule to an already existing ACL.
enabled: true
entry_point: add_ipv4_rule_acl.py
parameters:
  mgmt_ip:
    type: string
    description: The management IP address of the target device.
    required: true
    position: 0
  username:
    type: string
    description: The login user name to connect to the device.
    position: 1
  password:
    type: string
    description: The login password to connect to the device.
    secret: true
    position: 2
  acl_name:
    type: string
    description: The name of the access control list
        accepted-by:- [SLX, NOS, MLX]
    required: true
    position: 3
  seq_id: &seq_id
    type: integer
    description: The sequence number of the rule, if not specified, the rule is added
      at the end of the list. Valid range is 0 to 4294967290
        required-by:- [None]
        accepted-by:- [SLX, NOS, MLX]
    position: 4
  action: &action
    type: string
    description: The action performed by the ACL rule.
        required-by:- [SLX, NOS, MLX]
        accepted-by:- [SLX, NOS, MLX]
    position: 5
    enum:
      - permit
      - deny
      - hard-drop
    default: permit
  protocol_type: &protocol_type
    type: string
    description: The type of IP packets to be filtered based on the protocol. Valid values
      are <0-255> or key words tcp, udp, icmp or ip.
      This parameter is required for extended ACL.
      For MLX - Valid values are <0-255> or supported protocol keywords.
        required-by:- [None]
        accepted-by:- [SLX, NOS, MLX]
    position: 6
  source: &source
    type: string
    description: The source IP address filters { any | S_IPaddress/mask(0.0.0.255) | host,S_IPaddress
      } [ source-operator [ S_port-numbers ] ]
        required-by:- [All]
        accepted-by:- [SLX, NOS, MLX]
    required: true
    position: 7
    default: any
  destination: &destination
    type: string
    description: The destination IP address filters { any | S_IPaddress/mask(0.0.0.255) |
      host,S_IPaddress } [ source-operator [ S_port-numbers ] ]
        required-by:- [None]
        accepted-by:- [SLX, NOS, MLX]
    position: 8
  dscp: &dscp
    type: string
    description: This matches the specified value against the DSCP value of the packet
      to filter.  Allowed values are 0 through 63.
        For SLX - dscp value between 0 and 63. Format {<dscp>[,<dscp-force>]}.
        For NOS - dscp value between 0 and 63. Format {<dscp>]}.
        For MLX - this field will be used for dscp-mapping.
        required-by:- [None]
        accepted-by:- [SLX, NOS, MLX]
    required: false
    position: 9
  drop_precedence_force: &drop_precedence_force
    type: string
    description: This matches the drop_precedence value of the packet.
       Allowed values are 0 through 2.
       For MLX - Allowed values are 0 through 3.
        required-by:- [None]
        accepted-by:- [SLX, MLX]
        (NOTE:- SLX16r and SLXs devices doesn't support this parameter)
    position: 10
  urg: &urg
    type: string
    description: This enables the urg for the rule. Use "True" or "False" to enable or
        disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 11
  ack: &ack
    type: string
    description: This enables the ack for the rule. Use "True" or "False" to enable or
        disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 12
  push: &push
    type: string
    description: This enables the push for the rule. Use "True" or "False" to enable or
        disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 13
  fin: &fin
    type: string
    description: This enables the fin for the rule. Use "True" or "False" to enable or
        disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 14
  rst: &rst
    type: string
    description: This enables the rst for the rule. Use "True" or "False" to enable or
        disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 15
  sync: &sync
    type: string
    description: This enables the sync for the rule. Use "True" or "False" to enable or
        disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 16
  vlan_id: &vlan_id
    type: integer
    description: The VLAN interface to which the ACL is bound
        required-by:- [None]
        accepted-by:- [SLX, NOS, MLX]
    position: 17
  count: &count
    type: string
    description: This enables the statistics for the rule. Use "True" or "False" to
        enable or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 18
  log: &log
    type: string
    description: This enables the logging for the rule. Use "True" or "False" to
        enable or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS, MLX]
    position: 19
  mirror: &mirror
    type: string
    description: This enables the mirror for the rule. Use "True" or "False" to enable
        or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, MLX]
        (NOTE:- SLX16r and SLXs devices doesn't support this parameter)
    position: 20
  copy_sflow: &copy_sflow
    type: string
    description: This enables the copy-sflow for the rule. Use "True" or "False" to
        enable or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, MLX]
        (NOTE:- SLX16r and SLXs devices doesn't support this parameter)
    position: 21
  dscp_marking: &dscp_marking
    type: string
    description: This is the dscp-marking number that is used to mark the DSCP value in the
        incoming packet with the value you specify to filter.
        Allowed values are 0 through 63.
        required-by:- [None]
        accepted-by:- [MLX]
    required: false
    position: 22
  fragment: &fragment
    type: string
    description: The fragment keyword used to allow the ACL to filter fragmented packets.
        Use the non-fragment keyword to filter non-fragmented packets.
            - fragment
            - non-fragment
        required-by:- [None]
        accepted-by:- [MLX]
    required: false
    position: 23
  precedence: &precedence
    type: string
    description: This will match packets with given precedence value.
        Allowed value { <0 to 7> | critical | flash |
        flash-override | immediate | internet | network |
        priority | routine  }
        required-by:- [None]
        accepted-by:- [MLX]
    required: false
    position: 24
  option: &option
    type: string
    description: This will match match IP option packets.
        supported values are - 
            any, eol, extended-security, ignore, loose-source-route,
            no-op, record-route, router-alert, security, streamid,
            strict-source-route, timestamp             
            Allowed value in decimal <0-255>.
        required-by:- [None]
        accepted-by:- [MLX]
    required: false
    position: 25
  suppress_rpf_drop: &suppress_rpf_drop
    type: boolean
    description: This will permit packets that fail RPF check. Use true or false to
        enable or disable respectively.
        required-by:- [None]
        accepted-by:- [MLX]
    required: false
    position: 26
  priority: &priority
    type: integer
    description: This will set priority. Allowed value is <0-7>.
        required-by:- [None]
        accepted-by:- [MLX]
    required: false
    position: 27
  priority_force: &priority_force
    type: integer
    description: This will force packet outgoing priority. Allowed value is <0-7>.
        required-by:- [None]
        accepted-by:- [MLX]
    required: false
    position: 28
  priority_mapping: &priority_mapping
    type: integer
    description: This will map incoming packet priority. Allowed value is <0-7>.
        required-by:- [None]
        accepted-by:- [MLX]
    required: false
    position: 29
  tos: &tos
    type: string
    description: This will match packets with given TOS value.
        Allowed values are { <0-15> | 'max-reliability' | 'max-throughput' |
                             'min-delay' | 'normal' }
        required-by:- [None]
        accepted-by:- [MLX]
    required: false
    position: 30
  established: &established
    type: boolean
    description: This policy applies only to TCP packets that have the ACK or
        RST bits set on.
        required-by:- [None]
        accepted-by:- [MLX]
    required: false
    position: 31
  icmp_filter: &icmp_filter
    type: string
    description: This is the ICMP message type to be filtered.
        required-by:- [None]
        accepted-by:- [MLX]
    enum:
        - administratively-prohibited
        - any-icmp-type
        - destination-host-prohibited
        - destination-host-unknown
        - destination-net-prohibited
        - destination-network-unknown
        - echo
        - echo-reply
        - general-parameter-problem
        - host-precedence-violation
        - host-redirect
        - host-tos-redirect
        - host-tos-unreachable
        - host-unreachable
        - information-reply
        - information-request
        - mask-reply
        - mask-request
        - net-redirect
        - net-tos-redirect
        - net-tos-unreachable
        - net-unreachable
        - packet-too-big
        - parameter-problem
        - port-unreachable
        - precedence-cutoff
        - protocol-unreachable
        - reassembly-timeout
        - redirect
        - router-advertisement
        - router-solicitation
        - source-host-isolated
        - source-quench
        - source-route-failed
        - time-exceeded
        - timestamp-reply
        - timestamp-request
        - ttl-exceeded
        - unreachable
    position: 32
  drop_precedence: &drop_precedence
    type: string
    description: This matches the drop_precedence value of the packet.
       Allowed values are 0 through 2.
       For MLX - Allowed values are 0 through 3.
        required-by:- [None]
        accepted-by:- [MLX]
    position: 33
  acl_rules:
    type: array
    description: This bulk operation is supported to create more than one ACL rule
        in one action execution. The parameters are passed to create multiple
        rules that will follow the constraints similar to a single rule creation.
        NOTE- if rules are specified in acl_rules, the rule specified outside
        of the array will be ignored and only the rules in the acl_array will be processed
    position: 34
    items:
      properties:
        seq_id:
          << : *seq_id
        action:
          << : *action
        protocol_type:
          << : *protocol_type
        source:
          << : *source
        destination:
          << : *destination
        dscp:
          << : *dscp
        drop_precedence_force:
          << : *drop_precedence_force
        urg:
          << : *urg
        ack:
          << : *ack
        push:
          << : *push
        fin:
          << : *fin
        rst:
          << : *rst
        sync:
          << : *sync
        vlan_id:
          << : *vlan_id
        count:
          << : *count
        log:
          << : *log
        mirror:
          << : *mirror
        copy_sflow:
          << : *copy_sflow
        dscp_marking:
          << : *dscp_marking
        fragment:
          << : *fragment
        precedence:
          << : *precedence
        option:
          << : *option
        suppress_rpf_drop:
          << : *suppress_rpf_drop
        priority:
          << : *priority
        priority_force:
          << : *priority_force
        priority_mapping:
          << : *priority_mapping
        tos:
          << : *tos
        established:
          << : *established
        icmp_filter:
          << : *icmp_filter
        drop_precedence:
          << : *drop_precedence
