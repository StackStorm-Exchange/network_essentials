---
name: add_ipv4_rule_acl
pack: network_essentials
runner_type: run-python
description: Add an L3 IPv4 ACL rule to an existing ACL
enabled: true
entry_point: add_ipv4_rule_acl.py
parameters:
  mgmt_ip:
    type: string
    description: Management IP address of the target device
    required: true
    position: 0
  username:
    type: string
    description: Login user name to connect to the device
    position: 1
  password:
    type: string
    description: Login password to connect to the device
    secret: true
    position: 2
  acl_name:
    type: string
    description: Name of the access list
    required: true
    position: 3
  seq_id:
    type: integer
    description: Sequence number of the rule, if not specified, the rule is added
      at the end of the list. Valid range is 0 to 4294967290
    position: 4
  action:
    type: string
    description: Action performed by ACL rule
    position: 5
    enum:
      - permit
      - deny
      - hard-drop
    default: permit
  protocol_type:
    type: string
    description: Type of IP packets to be filtered based on protocol. Valid values
      are <0-255> or key words tcp, udp, icmp or ip
      For MLX - Type of IP packets to be filtered based on protocol. 
                Valid values are <0-255> or key words specifying protocols.
                MLX supports wide range of protocols e.g. 
                a_n,ahp,argus,aris,ax25,bbn-rcc,bna,br-sat-mon,cbt,cftp,
                chaos,compaq-peer,cphb,cpnx,crdup,crtp,dcn, etc.
    position: 6
  source:
    type: string
    description: Source address filters { any | S_IPaddress/mask(0.0.0.255) | host,S_IPaddress
      } [ source-operator [ S_port-numbers ] ]
    required: true
    position: 7
    default: any
  destination:
    type: string
    description: Destination address filters { any | S_IPaddress/mask(0.0.0.255) |
      host,S_IPaddress } [ source-operator [ S_port-numbers ] ]
    position: 8
  dscp:
    type: string
    description: Matches the specified value against the DSCP value of the packet
      to filter.  Allowed values are 0 through 63.
        For MLX - this field will be used for dscp-mapping.
    required: false
    position: 9
  drop_precedence_force:
    type: string
    description: Matches the drop_precedence value of the packet.
       Allowed values are 0 through 2.
       For MLX - Allowed values are 0 through 3.
    position: 10
  urg:
    type: string
    description: Enables urg for the rule
    position: 11
  ack:
    type: string
    description: Enables ack for the rule
    position: 12
  push:
    type: string
    description: Enables push for the rule
    position: 13
  fin:
    type: string
    description: Enables fin for the rule
    position: 14
  rst:
    type: string
    description: Enables rst for the rule
    position: 15
  sync:
    type: string
    description: Enables sync for the rule
    position: 16
  vlan_id:
    type: integer
    description: VLAN interface to which the ACL is bound
    position: 17
  count:
    type: string
    description: Enables statistics for the rule
    position: 18
  log:
    type: string
    description: Enables logging for the rule (Available for permit or deny only)
    position: 19
  mirror:
    type: string
    description: Enables mirror for the rule
    position: 20
  copy_sflow:
    type: string
    description: Enables copy-sflow for the rule
    position: 21
  dscp_marking:
    type: string
    description: dscp-marking number is used to mark the DSCP value in the
        incoming packet with the value you specify to filter.
        Allowed values are 0 through 63.
    required: false
    position: 22
  fragment:
    type: string
    description: Use fragment keyword to allow the ACL to filter fragmented packets.
        Use the non-fragment keyword to filter non-fragmented packets.
            - fragment
            - non-fragment
    required: false
    position: 23
  precedence:
    type: string
    description: Match packets with given precedence value.
        Allowed value { <0 to 7> | critical | flash |
        flash-override | immediate | internet | network |
        priority | routine  }
    required: false
    position: 24
  option:
    type: string
    description: Match match IP option packets.
        supported values are - 
            any, eol, extended-security, ignore, loose-source-route
            no-op, record-route, router-alert, security, streamid,
            strict-source-route, timestamp             
            Allowed value in decimal <0-255>.
    required: false
    position: 25
  suppress_rpf_drop:
    type: boolean
    description: Permit packets that fail RPF check
    required: false
    position: 26
  priority:
    type: integer
    description: set priority. Allowed value is <0-7>.
    required: false
    position: 27
  priority_force:
    type: integer
    description: force packet outgoing priority. Allowed value is <0-7>.
    required: false
    position: 28
  priority_mapping:
    type: integer
    description: map incoming packet priority. Allowed value is <0-7>.
    required: false
    position: 29
  tos:
    type: integer
    description: Match packets with given TOS value.
        Allowed value in decimal <0-15>.
    required: false
    position: 30
