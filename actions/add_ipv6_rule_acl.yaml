---
name: add_ipv6_rule_acl
pack: network_essentials
runner_type: run-python
description: This adds an L3 IPv6 ACL rule to an existing ACL.
enabled: true
entry_point: add_ipv6_rule_acl.py
parameters:
  mgmt_ip:
    type: string
    description: The management IP address of the target device.
    required: true
    position: 0
  username:
    type: string
    description: The login user name to connect to the device.
    position: 1
  password:
    type: string
    description: The login password to connect to the device.
    secret: true
    position: 2
  acl_name:
    type: string
    description: The name of the access control list.
        accepted-by:- [SLX, NOS, MLX]
    required: true
    position: 3
  seq_id: &seq_id
    type: integer
    description: The sequence number of the rule, if not specified, the rule is added
      at the end of the list. Valid range is 0 to 4294967290.
        required-by:- [None]
        accepted-by:- [SLX, NOS, MLX]
    position: 4
  action: &action
    type: string
    description: The action performed by the ACL rule
        required-by:- [SLX, NOS, MLX]
        accepted-by:- [SLX, NOS, MLX]
    position: 5
    enum:
      - permit
      - deny
      - hard-drop
    default: permit
  protocol_type: &protocol_type
    type: string
    description: The type of IP packets to be filtered based on the protocol. Valid values
      are 0 through 255 or key words tcp, udp, icmp or ip
      MLX supported key words are - ahp, esp, icmp, ipv6, sctp, tcp, udp 
        required-by:- [None]
        accepted-by:- [SLX, NOS, MLX]
    position: 6
  source: &source
    type: string
    description: The source IP address filters { any | S_IPaddress mask | host S_IPaddress
      } [ source-operator [ S_port-numbers ] ]
        required-by:- [All]
        accepted-by:- [SLX, NOS, MLX]
    required: true
    position: 7
    default: any
  destination: &destination
    type: string
    description: The destination IP address filters { any | S_IPaddress mask | host S_IPaddress
      } [ source-operator [ S_port-numbers ] ]
        required-by:- [None]
        accepted-by:- [SLX, NOS, MLX]
    position: 8
  dscp: &dscp
    type: string
    description: This  matches the specified value against the DSCP value of the packet
      to filter.  Can be either a numerical value or DSCP name.
        For SLX - dscp value between 0 and 63. Format {<dscp>[,<dscp-force>]}.
        For NOS - dscp value between 0 and 63. Format {<dscp>]}.
        For MLX - Only numerical value in range of 0-63 is allowed.
        required-by:- [None]
        accepted-by:- [SLX, NOS, MLX]
    position: 9
  drop_precedence_force: &drop_precedence_force
    type: string
    description: This matches the drop_precedence value of the packet.  Allowed values are 0 through 2.
        MLX- Allowed range is <0-3>.
        required-by:- [None]
        accepted-by:- [SLX, MLX]
        (NOTE:- SLX16r and SLXs devices doesn't support this parameter)
    position: 10
  urg: &urg
    type: string
    description: This enables the urg for the rule. Use "True" or "False" to
        enable or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 11
  ack: &ack
    type: string
    description: This enables the ack for the rule. Use "True" or "False" to
        enable or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 12
  push: &push
    type: string
    description: This enables the push for the rule. Use "True" or "False" to
        enable or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 13
  fin: &fin
    type: string
    description: This enables the fin for the rule. Use "True" or "False" to
        enable or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 14
  rst: &rst
    type: string
    description: This enables the rst for the rule. Use "True" or "False" to
        enable or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 15
  sync: &sync
    type: string
    description: This enables the sync for the rule. Use "True" or "False" to
        enable or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 16
  vlan_id: &vlan_id
    type: integer
    description: The VLAN interface to which the ACL is bound.
        required-by:- [None]
        accepted-by:- [SLX, NOS, MLX]
    position: 17
  count: &count
    type: string
    description: This enables the statistics for the rule. Use "True" or "False" to
        enable or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS]
    position: 18
  log: &log
    type: string
    description: This enables the logging for the rule (Available for permit or deny only).
        Use "True" or "False" to enable or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, NOS, MLX]
    position: 19
  mirror: &mirror
    type: string
    description: This enables the mirror for the rule. Use "True" or "False" to
        enable or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, MLX]
        (NOTE:- SLX16r and SLXs devices doesn't support this parameter)
    position: 20
  copy_sflow: &copy_sflow
    type: string
    description: This enables the copy-sflow for the rule. Use "True" or
        "False" to enable or disable respectively.
        required-by:- [None]
        accepted-by:- [SLX, MLX]
        (NOTE:- SLX16r and SLXs devices doesn't support this parameter)
    position: 21
  dscp_marking: &dscp_marking
    type: string
    description: The dscp-marking number used to mark the DSCP value in the
        incoming packet with the value you specify in the filter.
        Allowed values are 0 through 63.
        required-by:- [None]
        accepted-by:- [MLX]
    required: false
    position: 22
  fragment: &fragment
    type: boolean
    description: The policy applied to fragmented packets that
        contain a non-zero fragment offset.
        required-by:- [None]
        accepted-by:- [MLX]
    required: false
    position: 23
    default: false
  drop_precedence: &drop_precedence
    type: string
    description: This matches the drop_precedence value of the packet. MLX- Allowed range is <0-3>.
        required-by:- [None]
        accepted-by:- [MLX]
    position: 24
  icmp_filter: &icmp_filter
    type: string
    description: This specify the ICMP type and ICMP code or ICMP message. Format is
        [ [ icmp-type <vlaue> ] [ icmp-code <value> ] ] | [ icmp-message <value> ]
        icmp-type and icmp-code values are between 0-255.
        icmp-message value can be one of these
            beyond-scope, destination-unreachable, dscp, echo-reply, echo-request,
            flow-label, fragments, header, hop-limit, mld-query, mld-reduction,
            mld-report, nd-na, nd-ns, next-header, no-admin, no-route,
            packet-too-big, parameter-option, parameter-problem,
            port-unreachable, reassembly-timeout, renum-command,
            renum-result, renum-seq-number, router-advertisement,
            router-renumbering, router-solicitation, routing, sequence,
            time-exceeded, unreachable
        required-by:- [None]
        accepted-by:- [MLX]
    position: 25
  tcp_operator: &tcp_operator
    type: string
    description: This specify a comparison operator for the TCP port. This parameter applies
        only when you specify tcp as the protocol.  Allowed values are [established, syn].
        required-by:- [None]
        accepted-by:- [MLX]
    position: 26
  acl_rules:
    type: array
    description: The bulk operation that is supported to create more than one ACL rule
        in one action execution. The parameters are passed to create multiple
        rules that will follow the constraints similar to a single rule creation.
        NOTE- if rules are specified in the acl_rules, the rule specified outside
        of the array will be ignored and only rules in the acl_array will be processed.
    position: 27
    items:
      properties:
        seq_id:
          << : *seq_id
        action:
          << : *action
        protocol_type:
          << : *protocol_type
        source:
          << : *source
        destination:
          << : *destination
        dscp:
          << : *dscp
        drop_precedence_force:
          << : *drop_precedence_force
        urg:
          << : *urg
        ack:
          << : *ack
        push:
          << : *push
        fin:
          << : *fin
        rst:
          << : *rst
        sync:
          << : *sync
        vlan_id:
          << : *vlan_id
        count:
          << : *count
        log:
          << : *log
        mirror:
          << : *mirror
        copy_sflow:
          << : *copy_sflow
        dscp_marking:
          << : *dscp_marking
        fragment:
          << : *fragment
        drop_precedence:
          << : *drop_precedence
        icmp_filter:
          << : *icmp_filter
        tcp_operator:
          << : *tcp_operator
